@model PRO_finder.Models.ViewModels.UploadMyWorksViewModel
@using PRO_finder.Service
@using PRO_finder.Models
@{
    ViewBag.Title = "UploadMyWorks";
    Layout = "~/Views/Shared/_LayoutMemberTalent.cshtml";

}

@using (Html.BeginForm("UploadMyWorks", "Talent"))
{
    @Html.AntiForgeryToken()
    <div class="myContainer col">
        <div class="form-horizontal">
            <h4>新增作品集</h4>
            <hr>
            <div class="form-group">
                <label for="WorkName" class="col-md-12 control-label">作品集名稱</label>
                <div class="col-md-12">
                    <input type="text" id="WorkName" name="WorkName" class="form-control text-box single-line">
                </div>
            </div>
            <div class="form-group">
                <label for="Category" class="control-label col-md-12">作品類別</label>
                <div class="container">
                    <div class="row">
                        <div class="col-6">
                            @Html.DropDownList("Catgeory", (List<SelectListItem>)ViewBag.CategoryList, new { @class = "form-control", @id = "categoryDropdown" })
                        </div>
                        <div class="col-6">
                            <select class="form-control" id="subcategorySelect" name="SubCategoryID">
                                <option>選擇子類型</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.SubCategoryID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label for="Client" class="col-md-12 control-label">客戶名稱</label>
                <div class="col-md-12">
                    <input type="text" id="Client" name="Client" class="form-control text-box single-line">
                </div>
            </div>
            <div class="form-group">
                <label for="Role" class="col-md-12 control-label">工作職責</label>
                <div class="col-md-12">
                    <input type="text" id="Role" name="Role" class="form-control text-box single-line">
                </div>
            </div>
            <div class="form-group">
                <label for="YearStarted" class="col-md-12 control-label">作品年份</label>
                <div class="col-md-12">
                    <input type="text" id="YearStarted" name="YearStarted" class="form-control text-box single-line">
                </div>
            </div>
            <div class="form-group">
                <label for="WebsiteURL" class="col-md-12 control-label">作品網站連結</label>
                <div class="col-md-12">
                    <input type="text" id="WebsiteURL" name="WebsiteURL" class="form-control text-box single-line">
                </div>
            </div>
            <hr>
            <div class="form-group">
                <p class="col-md-12 control-label text-black font-weight-bold">作品附件檔案</p>
                <div class="container">
                    <div class="row workAttachmentRow">
                        <div class="col-md-12 my-2 workAttachmentWrap" id="wrap0">
                            @*<a class="btn removeAttachment" data-count="0"><i class="far fa-trash-alt"></i></a>*@
                            <p class="col-md-12 mb-0 text-black">附件檔案名稱</p>
                            <div class="col-md-12 mt-2">
                                <input type="text" data-content="WorkAttachmentName" name="WorkAttachmentName" class="form-control text-box single-line">
                            </div>
                            <div class="col-md-12 mt-2">
                                <input type="file" data-content="WorkAttachmentLink" name="WorkAttachmentLink" class="">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12 mt-3 text-right">
                    <span class="btn btn-light" id="addFile"><i class="fas fa-plus"></i>&ensp;新增作品附件</span>
                </div>
                @*<div>
                        <button id="test">test</button>
                    </div>*@
            </div>
            <hr>
            <div class="form-group">
                <div class="container">
                    <div class="row">
                        <div class="col-12">
                            <label class="col-md-12 control-label">影音圖檔上傳</label>
                            <label for="newWorks" class="mt-2 ml-3">
                                <img src="https://image.flaticon.com/icons/png/512/568/568717.png"
                                     alt=""><span class="uploadIcon">上傳作品</span>
                            </label>
                        </div>
                        <div class="col-6 d-none">
                            <input type="file" id="newWorks" multiple="multiple" class="w-100" name="">
                        </div>
                        @*<div class="col-12">
                                <input type="button" class="btn btn-primary ml-3" value="test-upload-cloudinary" id="test" />
                            </div>*@
                    </div>
                </div>
            </div>
            <div class="displayUploadArea">
                <div class="container">
                    <p class="text-danger mb-0">&ensp;*拖曳交換順序</p>
                    <div class="row" id="displayUpload">
                    </div>
                </div>
            </div>
            <hr />
            <div class="form-group">
                <label for="editor" class="col-md-12 control-label">作品描述</label>
                <div class="col-md-12">
                    <div id="editor"></div>
                    <input type="hidden" name="WorkDescription">
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-12 text-center">
                    <input type="submit" value="儲存作品" class="btn btn-primary" id="submitBtn" />
                </div>
            </div>
        </div>
    </div>

    //hiddenInputs
    <input type="hidden" name="WorkAttachmentList" id="WorkAttachmentList" />
    <input type="hidden" name="WorkPictureList" id="WorkPictureList" />
}
@*file template*@
<template id="addFileTemplate">
    <div class="col-md-12 my-2 workAttachmentWrap">
        <a class="btn removeAttachment"><i class="far fa-trash-alt"></i></a>
        <p class="col-md-12 mb-0 text-black">附件檔案名稱</p>
        <div class="col-md-12 mt-2">
            <input type="text" data-content="WorkAttachmentName" name="WorkAttachmentName" class="form-control text-box single-line">
        </div>
        <div class="col-md-12 mt-2">
            <input type="file" data-content="WorkAttachmentLink" name="WorkAttachmentLink" class="">
        </div>
    </div>
</template>

@*picture template*@
<template id="displayPictureTemplate">
    <div class="col-12 col-md-6 col-lg-4">
        <span class="btn btn-outline-danger"><i class='fas fa-trash-alt'></i></span>
        @*<img src="" data-content="WorkPicture"/>*@
        @*<video src="" data-content="WorkPicture"/>*@
    </div>
</template>

@section topJS
    {
    <script src="https://kit.fontawesome.com/de0f812dc0.js" crossorigin="anonymous"></script>
}
@section topCSS
    {
    <link href="~/Assets/css/quill.snow.css" rel="stylesheet" />
    <style>
        h4 {
            color: #89ba16;
            font-weight: 900;
            padding: 0 15px;
        }

        .myContainer {
            @*max-width: 510px;*@
            margin: auto;
            border-radius: 10px;
            box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;
            padding: 30px;
        }

        hr {
            /* margin: 10px 0px !important; */
            color: #89ba16;
            border-top: #89ba16 2px solid;
        }

        label {
            font-weight: 700;
        }

        label[for="newWorks"] {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            width: 15vw;
            height: 15vw;
            background-color: #f2f2f2;
            border: 2px #bebebe dashed;
            margin-left: 0;
        }

        label[for="newWorks"] img {
            width: 30%;
        }
        span#addFile:hover{
            cursor: pointer;
        }
        span.uploadIcon{
            font-size: 10px;
        }
        #displayUpload {
            border: 2px #89ba16 dashed;
            margin: 0px 15px;
        }
        #displayUpload img {
            margin-top: auto auto;
            width: 100%;
            height: 100%;
            /*max-height: 150px;*/
            padding: 0px;
        }
        #displayUpload video {
            margin-top: auto auto;
            width: 100%;
            height: 100%;
            /*max-height: 150px;*/
            padding: 0px;
        }

        #displayUpload div {
            position: relative;
            width: 100%;
            margin: 20px auto;
        }

        #displayUpload div::before {
            content: "";
            position: absolute;
            width: calc(100% - 30px);
            height: 100%;
            z-index: 100;
            background-color: rgba(0, 0, 0, 0.5);
        }
        #displayUpload div:first-child::before {
            content: "  *第一張為封面";
            color: yellow;
            font-size: 16px;
            font-weight: 700;
        }

        #displayUpload div span {
            position: absolute;
            z-index: 300;
            display: block;
            top: 0px;
            right: 15px;
            border: none !important;
        }
        #displayUpload div span:hover{
            background-color: unset !important;
            cursor:pointer;
        }
        .workAttachmentWrap {
            border: dashed 1px #bebebe;
            padding:15px;
            border-radius: .25rem;
            position:relative;
        }
        .workAttachmentWrap a{
            display:block;
            position:absolute;
            top:0;
            right:0;
            z-index:10;
        }
        .workAttachmentWrap a:hover{
            cursor:pointer;
        }
        @@media screen and (min-width:768px){
            span.uploadIcon {
                font-size: 16px;
            }
        }

    </style>
}
@section endJS
    {

    <script src="~/Assets/js/quill.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.14.0/Sortable.min.js" integrity="sha512-zYXldzJsDrNKV+odAwFYiDXV2Cy37cwizT+NkuiPGsa9X1dOz04eHvUWVuxaJ299GvcJT31ug2zO4itXBjFx4w==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    @*<script src="~/Assets/cloudinary-core/src/util/lodash.js"></script>
        <script src="~/Assets/cloudinary-core/cloudinary-core.js"></script>*@
    <script>

        //服務類別轉換
        let selector = document.querySelector("#subcategorySelect");
        var subCategoryList = [];

        axios.get("/api/Talent/GetAllCategoryAndSubCategoryList").then(result => {
            let data = JSON.parse(result.data.Result);
            subCategoryList.push(...data);
        });

        $g("#categoryDropdown").addEventListener("change", function () {
            selector.innerHTML = "<option class='text - center'>選擇服務子類型</option>";
            let allsub = JSON.parse(subCategoryList.filter(x => x.CategoryID == this.value)[0].JsonSubCategoryList);
            allsub.forEach(s => {
                let option = document.createElement("option");
                option.innerText = s.SubCateName;
                option.value = s.SubCateID;
                selector.append(option);
            });
        });

        //新增作品連結
        let count = 1;
        $g("#addFile").addEventListener("click", function () {
            let clone = $g("#addFileTemplate").content.cloneNode(true);
            clone.querySelector(".workAttachmentWrap").setAttribute("id", `wrap${count}`);
            clone.querySelector("a").setAttribute("data-count", `${count}`);

            clone.querySelector("a").addEventListener("click", function () {
                let div = $g(`.workAttachmentWrap#wrap${this.dataset.count}`);
                $g(".workAttachmentRow").removeChild(div);
            });

            $g(".workAttachmentRow").appendChild(clone);
            count++;
        });

        //上傳圖檔呈現
        let countMedia = 0;
        let displayUpload = $g("#displayUpload");
        $g("input#newWorks").addEventListener("change", function () {
            let files = Array.from(this.files);
            files.forEach(file => {
                let clone = $g("#displayPictureTemplate").content.cloneNode(true);
                let div = clone.querySelector("div");
                let span = clone.querySelector("span");
                span.dataset.count = countMedia;
                div.setAttribute("id", `count${countMedia}`);

                //刪除設定
                span.addEventListener("click", function () {
                    let theCount = this.dataset.count
                    let theDiv = $g(`div#count${theCount}`);
                    displayUpload.removeChild(theDiv);
                });

                //新增圖片影片預覽
                let regexImg = "^image.+";
                let regexVideo = "^video.+";
                let fileType = file.type;
                let img = document.createElement("img");
                img.classList.add("uploadImg");
                let video = document.createElement("video");
                video.classList.add("uploadVideo");

                if (fileType.match(regexImg)) {
                    img.src = URL.createObjectURL(file);
                    div.appendChild(img);
                }
                else if (fileType.match(regexVideo)) {
                    video.src = URL.createObjectURL(file);
                    div.appendChild(video);
                }
                displayUpload.appendChild(div);
                countMedia++;
            });
        });

        //sortable
        const displayArea = $g("#displayUpload");
        new Sortable(displayArea, {
            animation: 200
        });

        //quill 富文本編輯器
        var toolbarOptions = [
            ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
            [{ 'list': 'ordered' }, { 'list': 'bullet' }],
            [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
            [{ 'direction': 'rtl' }],                         // text direction
            [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
            [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
            [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
            [{ 'align': [] }],
            ['clean']                                         // remove formatting button
        ];
        var quill = new Quill('#editor', {
            modules: {
                toolbar: toolbarOptions
            },
            theme: 'snow'
        });
        $g('.ql-toolbar.ql-snow').style.setProperty('border-radius', '.25rem .25rem 0 0');
        $g('#editor').style.setProperty('border-radius', '0 0 .25rem .25rem');
        $g('#editor').style.setProperty('min-height', '200px');

        $g("input[type='submit']").addEventListener("click", function (e) {
            e.preventDefault();

            //富文本編輯器儲存
            $g("input[name='WorkDescription']").value = $g("div.ql-editor").innerHTML;

            //上傳cloudinary及作品檔案
            let workAttachmentArray = [];
            let workPictureArray = [];
            const asyncRun = async () => {
                //WorkAttachment
                let input_nameList = document.querySelectorAll("input[data-content='WorkAttachmentName']");
                let input_linkList = document.querySelectorAll("input[data-content='WorkAttachmentLink']");
                if (input_nameList == null && input_linkList == null) {
                    $g("input#WorkAttachmentList").value = null;
                }
                else {
                    let len = input_nameList.length >= input_linkList.length ? input_linkList.length : input_nameList.length;
                    for (let i = 0; i < len; i++) {
                        let file = new FormData();
                        file.append("file", input_linkList[i].files[0]);

                        let obj = new Object();
                        obj['WorkAttachmentName'] = input_nameList[i].value;
                        obj['WorkAttachmentLink'] = await axiosFiles(file);
                        workAttachmentArray.push(obj);
                    };
                    let newAttachments = JSON.stringify(workAttachmentArray);
                    $g("input#WorkAttachmentList").value = newAttachments;

                };

                //儲存作品圖例
                let imgs = document.querySelectorAll(".uploadImg");
                //上傳雲端
                for (let i = 0; i < imgs.length; i++) {
                        const blobData = await getBlobData(imgs[i].src);
                        const fileObject = new File([blobData], imgs[i].src, { type: blobData.type });
                        const form = new FormData();
                        form.append("picture", fileObject);
                        let url_result = await axiosImageFile(form);
                        workPictureArray.push({ WorkPicture: url_result, SortNumber: i });
                 };
                let newPictures = JSON.stringify(workPictureArray);
                $g("input#WorkPictureList").value = newPictures;
                document.querySelector("form[action='/Talent/UploadMyWorks']").submit();
            }
            asyncRun();
        })

        function $g(element) {
            let temp = document.querySelectorAll(element);
            return temp.length == 1 ? temp[0] : temp;
        }
        function fetchCloudinary(form_data) {
            return fetch(CLOUDINARY_URL, {
                method: "POST",
                body: form_data
            })
                .then((response) => {
                    return response.json();
                })
                .then(data => data.url);
        }
        function axiosFiles(file) {
            return axios({ method: "post", data: file, url: "/Talent/UploadFile", contentType: false, processData: false, enctype: "multipart/form-data" })
                .then(res => res.data)
        }
        function getBlobData(img_src) {
            return fetch(img_src).then(res => res.blob());
        }
        function axiosImageFile(picture) {
            return axios({
                method: 'post',
                url: '/Talent/UploadCloudinary',
                data: picture,
                contentType: false,
                processData: false,
                enctype: "multipart/form-data"
            }).then(res => res.data);
        }
    </script>



}

