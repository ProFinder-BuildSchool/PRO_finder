@model PRO_finder.ViewModels.CreateQuotationViewModel

@using PRO_finder.Service
@using PRO_finder.Models


@{
    ViewBag.Title = "CreateQuotation";
    Layout = "~/Views/Shared/_LayoutMemberTalent.cshtml";


}


@using (Html.BeginForm("CreateQuotation", "Talent"))
{
    @Html.AntiForgeryToken()
    <div class="myContainer">
        <div class="form-horizontal">
            <h4>刊登新服務</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @*服務主類別選單*@
            <div class="form-group">
                <label for="Category" class="control-label col-md-12">服務類別</label>
                <div class="container">
                    <div class="row">
                        <div class="col-6">
                            @Html.DropDownList("Catgeory", (List<SelectListItem>)ViewBag.categoryList, new { @class = "form-control", @id = "categoryDropdown" })
                        </div>
                        <div class="col-6">
                            <select class="form-control" id="subcategorySelect" name="SubCategoryID">
                                <option class="text-center">選擇服務子類型</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.SubCategoryID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            @*服務子類別選單*@

            @*服務名稱*@
            <div class="form-group">
                @Html.LabelFor(model => model.QuotationTitle, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.QuotationTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.QuotationTitle, "", new { @class = "text-danger" })
                </div>
            </div>


            @*服務定價*@
            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-8">
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-1" style="line-height:40px; padding:0px !important;"> 元&ensp;/&ensp;</div>
                        <div class="col-3">
                            @Html.EnumDropDownListFor(model => model.QuotationUnit, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.QuotationUnit, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            @*製作天數*@
            <div class="form-group">
                @Html.LabelFor(model => model.ExecuteDate, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.TextBoxFor(model => model.ExecuteDate, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ExecuteDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    <div id="editor" name="Description"></div>
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mt-5">
                <div class="container">
                    <div class="row">
                        <div class="col-12 ">
                            <label for="upload">
                                <img src="https://image.flaticon.com/icons/png/512/568/568717.png"
                                     alt=""><span class="uploadIcon">上傳作品</span>
                            </label>
                        </div>
                        <div class="col-6 d-none">
                            <input type="file" id="upload" multiple="multiple" class="w-100">
                        </div>
                    </div>
                </div>
            </div>
            <div class="displayUploadArea">
                <div class="container">
                    <div class="row" id="displayUpload">
                    </div>
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-12 text-center">
                    <input type="submit" value="儲存" class="btn btn-primary mt-3" />
                </div>
            </div>
        </div>
    </div>
}
@section topCSS{
    <link href="~/Assets/css/quill.snow.css" rel="stylesheet" />
    <style>
        h4 {
            color: #89ba16;
            font-weight: 900;
        }

        .myContainer {
            /* max-width: 510px; */
            margin: auto;
            border-radius: 10px;
            box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;
            padding: 30px;
        }

        hr {
            margin: 10px 0px !important;
        }

        label {
            font-weight: 700;
        }

            label[for="upload"] {
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
                width: 15vw;
                height: 15vw;
                background-color: #f2f2f2;
                border: 2px #bebebe dashed;
                margin: auto;
            }

                label[for="upload"] img {
                    width: 30%;
                }

        #displayUpload {
            border: 2px #89ba16 dashed;
            margin: 0px 15px;
        }

            #displayUpload img {
                margin-top: auto auto;
                width: 100%;
                height: 100%;
                /*max-height: 150px;*/
                padding: 0px;
            }

            #displayUpload div {
                position: relative;
                width: 100%;
                margin: 20px auto;
            }

                #displayUpload div::before {
                    content: "";
                    position: absolute;
                    width: calc(100% - 30px);
                    height: 100%;
                    z-index: 100;
                    background-color: rgba(0, 0, 0, 0.5);
                }

                #displayUpload div span {
                    position: absolute;
                    z-index: 300;
                    display: block;
                    top: 0px;
                    right: 15px;
                    border: none !important;
                }

                    #displayUpload div span:hover {
                        background-color: unset !important;
                        cursor: pointer;
                    }
    </style>
}

@section endJS{
    <script src="~/Assets/js/quill.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.14.0/Sortable.min.js" integrity="sha512-zYXldzJsDrNKV+odAwFYiDXV2Cy37cwizT+NkuiPGsa9X1dOz04eHvUWVuxaJ299GvcJT31ug2zO4itXBjFx4w==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>

        //服務類別轉換
        let selector = document.querySelector("#subcategorySelect");
        var subCategoryList = [];

        axios.get("/Talent/GetAllCategoryAndSubCategoryList").then(result => {
            let data = JSON.parse(result.data);
            subCategoryList.push(...data);
        });

        document.querySelector("#categoryDropdown").addEventListener("change", function () {
            selector.innerHTML = "<option class='text - center'>選擇服務子類型</option>";
            subCategoryList.forEach(sub => {
                if (sub.CategoryID == this.value) {
                    let allsub = JSON.parse(sub.JsonSubCategoryList);
                    allsub.forEach(s => {
                        let option = document.createElement("option");
                        option.innerText = s.SubCategoryName;
                        option.value = s.SubCategoryID;
                        selector.append(option);
                    });
                };
            });
        });

        //quill 富文本編輯器
        var toolbarOptions = [
            ['bold', 'italic', 'underline', 'strike'],        // toggled buttons

            [{ 'list': 'ordered' }, { 'list': 'bullet' }],
            [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
            [{ 'direction': 'rtl' }],                         // text direction

            [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
            [{ 'header': [1, 2, 3, 4, 5, 6, false] }],

            [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
            [{ 'align': [] }],

            ['clean']                                         // remove formatting button
        ];
        var quill = new Quill('#editor', {
            modules: {
                toolbar: toolbarOptions
            },
            theme: 'snow'
        });
        $g('.ql-toolbar.ql-snow').style.setProperty('border-radius', '.25rem .25rem 0 0');
        $g('#editor').style.setProperty('border-radius', '0 0 .25rem .25rem');
        $g('#editor').style.setProperty('min-height', '200px');


        //imgur 圖檔上傳
        const id = "c20b85a63157827";
        const album = 'Sv87YFL';


        $g("#upload").addEventListener("change", function (e) {
            let form = new FormData();
            form.append('image', e.target.files[0]);
            /*form.append('album', album)*/
            console.log(form);

            fetch("https://api.imgur.com/3/image", {
                method: "post",
                headers: {
                    Authorization: `Client-ID ${id}`
                },
                body: form
            }).then(data => data.json()).then(data => {
                console.log(data);
            })
        });

        //上傳圖檔呈現
        let count = 0;
        let displayUpload = $g("#displayUpload");
        $g("input#upload").addEventListener("change", function () {
            let files = Array.from(this.files);

            files.forEach(file => {

                let div = document.createElement("div");
                let span = document.createElement("span");
                let img = new Image();
                div.classList.add("col-12");
                div.classList.add("col-md-6");
                div.classList.add("col-lg-4");
                img.src = URL.createObjectURL(file);
                span.innerHTML = "<i class='fas fa-trash-alt'></i>";
                span.classList.add("btn");
                span.classList.add("btn-outline-danger");
                span.dataset.count = count;
                div.setAttribute("id", `count${count}`);
                div.setAttribute("draggable", true);


                //刪除設定
                span.addEventListener("click", function () {
                    let displayUpload = $g("#displayUpload");
                    let theDiv = $g(`div#count${this.dataset.count}`);
                    displayUpload.removeChild(theDiv);
                    console.log(theDiv);
                });

                div.appendChild(span);
                div.appendChild(img);
                displayUpload.appendChild(div);
                count++;
            });
        });

        //sortable
        const displayArea = $g("#displayUpload");
        new Sortable(displayArea, {
            animation:200
        });



        function $g(element) {
            let temp = document.querySelectorAll(element);
            return temp.length == 1 ? temp[0] : temp;
        }
    </script>

}

