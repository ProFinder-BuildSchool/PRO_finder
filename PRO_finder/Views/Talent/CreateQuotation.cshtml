@model PRO_finder.ViewModels.CreateQuotationViewModel

@using PRO_finder.Service
@using PRO_finder.Models


@{
    ViewBag.Title = "CreateQuotation";
    Layout = "~/Views/Shared/_LayoutMemberTalent.cshtml";
    var service = new CategoryService();
    List<SelectListItem> categoryList = service.getCategorySelectList();

}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>刊登新服務</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*服務主類別選單*@
        <div class="form-group">
            <label for="Category" class="control-label col-md-10">服務類別</label>
            <div class="row">
                <div class="col-5">
                    @Html.DropDownList("Catgeory", categoryList, new { @class = "form-control", @id = "categoryDropdown" })
                </div>
                <div class="col-5">
                    <select class="form-control" id="subcategorySelect" name="SubCategoryID">
                        <option>---選擇服務子類型---</option>
                    </select>
                    @*@Html.DropDownList("SubCategoryID", null, htmlAttributes: new { @class = "form-control" })*@
                    @Html.ValidationMessageFor(model => model.SubCategoryID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @*服務子類別選單*@

        @*服務名稱*@
        <div class="form-group">
            @Html.LabelFor(model => model.QuotationTitle, htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuotationTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuotationTitle, "", new { @class = "text-danger" })
            </div>
        </div>


        @*服務定價*@
        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                <div class="row">
                    <div class="col-8">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-1" style="line-height:40px; padding:0px !important;"> 元&ensp;/&ensp;</div>
                    <div class="col-3">
                        @Html.EnumDropDownListFor(model => model.QuotationUnit, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.QuotationUnit, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        @*製作天數*@
        <div class="form-group">
            @Html.LabelFor(model => model.ExecuteDate, htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ExecuteDate, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExecuteDate, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.MemberID, htmlAttributes: new { @class = "control-label col-md-10" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.MemberID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MemberID, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.OtherPictureID, "OtherPictureID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("OtherPictureID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OtherPictureID, "", new { @class = "text-danger" })
                </div>
            </div>*@







        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section endJS{
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
       document.querySelector("#categoryDropdown").addEventListener("change", function () {
            console.log(this.value);
            axios({method:"post", url:"@Url.Action("getSubcategoryList", "Talent")", data: { categoryID: this.value }})
                .then(result => {
                    let data = result.data;
                    let selector = document.querySelector("#subcategorySelect");
                    selector.innerHTML = "<option>---選擇服務子類型---</option>"
                    data.forEach(d => {
                        console.log(d);
                        let option = document.createElement("option");
                        option.innerText = d.SubCategoryName;
                        option.value = d.SubCategoryID;
                        selector.append(option);
                    });
                });
        })
        

    </script>

}
