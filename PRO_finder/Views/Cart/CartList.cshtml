@{
    ViewBag.Title = "Index";

}



<div class="container">
    <h2>您購物車中的項目</h2>
    <div class="most__search__tab mb-3" id="myTab" role="tablist">
        <ul class="nav nav-tabs" role="tablist">
            <li class="nav-item" role="presentation">
                <a class="nav-link tab active" data-toggle="tab" href="#tabs-1" role="tab">
                    案主
                </a>
            </li>
            <li class="nav-item" role="presentation">
                <a class="nav-link tab" data-toggle="tab" href="#tabs-2" role="tab">
                    人才報價紀錄
                </a>
            </li>
        </ul>
    </div>

</div>




<div class="tab-content" id="cart">
    
    <div class="cart_area   active tab-pane fade show" id="tabs-1" role="tabpanel" >
        <div v-if="get==false" class="text-center py-5 my-5">
            暫時沒東西喔!!，再去逛逛吧~~
        </div>
        <div class="container" v-if="get">
            <div class="cart_inner">
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col">確認結帳</th>
                                <th scope="col">產品</th>
                                <th scope="col">名稱</th>
                                <th scope="col">工作室名稱</th>
                                <th scope="col">數量</th>
                                <th scope="col">金額</th>
                                <th scope="col">修改</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="(item,index) in cartsProduct">
                                <td>
                                    <input class="checkbox" type="checkbox" v-on:change="addcheckoutList(index)" />
                                </td>
                                <td>
                                    <div class="d-flex justify-content-center">
                                        <img class="img-thumbnail" :src="item.QuotationImg" alt="" />
                                    </div>
                                </td>
                                <td>
                                    <div class="media-body">
                                        <p>{{ item.SubCategory }}</p>
                                    </div>
                                </td>
                                <td>
                                    <div>
                                        <p>{{ item.StudioName }}</p>
                                    </div>
                                </td>
                                <td>
                                    <div class="product_count">

                                        <span class="count">{{ item.Count }}</span>

                                    </div>
                                </td>
                                <td>
                                    <div>
                                        <p>{{ item.Price }}<span>/{{item.Unit}}</span></p>
                                    </div>
                                </td>
                                <td>

                                    <a class="mr-2 text-primary" v-on:click.prevent="clickModal(index)">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a class="delete text-danger" v-on:click.prevent="confirmDelete(index)">
                                        <i class="far fa-trash-alt"></i>
                                    </a>

                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <div class="text-right mb-5 checkout">
                        <p>商品金額：<span>{{ cartTotal }}</span></p>
                        <button class="checkoutbtn" v-bind:disabled="disabled" v-on:click="addOrder">結帳</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="cart_area   tab-pane fade" id="tabs-2" role="tabpanel">
        <div class="talentCart">
            <div v-if="getQT==false" class="text-center py-5 my-5">
                暫時沒東西喔!!，再去逛逛吧~~
            </div>
            <div class="container"v-if="getQT" >
                <div class="cart_inner">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col">人才影像</th>
                                    <th scope="col">人才資訊</th>
                                    <th scope="col">報價資訊</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="(item,index) in qtsProduct">
                                    <td>
                                        <div class="d-flex justify-content-center">
                                            <img class="img-thumbnail" :src="item.ProfilePicture" alt="" />
                                        </div>
                                    </td>
                                    <td>
                                        <div class="text-left ">
                                            <p><span class="text-primary"> {{item.NickName}}</span></p>
                                            <p>提案日期 : <span> {{item.ProposeDate}}</span></p>
                                            <p>已成交 : <span> {{item.DealedCount}}件</span></p>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="text-left QTInfo">
                                            <p>案件 : <span>{{item.CaseTitle}}</span></p>
                                            <p>報價金額 : <span> {{item.ProposePrice}}</span> </p>
                                            <p>預估天數 : <span> {{item.PredictDays}}天內完成</span></p>
                                            <p>報價信息 : <span> {{item.ProposeDescription}}</span></p>
                                        </div>
                                        <div class="RefuseOrChoose text-right">
                                            <button class="refusebtn btn btn-outline-primary" @@click="refuse(item.QuotationDetailID)">婉拒</button>
                                            <button class="choosebtn btn btn-primary" @@click="complete(item.QuotationDetailID)">結帳</button>
                                            
                                        </div>
                                    </td>

                                </tr>
                            </tbody>
                        </table>

                    </div>
                </div>
            </div>
        </div>
    </div>



    <!-- Modal -->
    <div class="modal fade" id="staticBackdrop" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Modal title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="confirmProduct">
                        <div class="row justify-content-center">
                            <form class="col-12">
                                <p class="h5">修改訂購數量</p>
                                <div>
                                    <button class="minuscount" v-on:click.prevent="changeCountMinus">–</button>
                                    <span class="count">{{modal.Count}}</span>
                                    <button class="pluscount" v-on:click.prevent="changeCountPlus">+</button>
                                </div>
                                <h5 class="text-start text-dark pb-2 border-bottom">
                                    修改訂購人資訊
                                </h5>
                                <div class="form-group text-start text-dark mb-2">
                                    <label class="" for="useremail">Email</label>
                                    <input type="email" class="form-control" name="email" id="useremail"
                                           placeholder="請輸入 Email" v-model="modal.Email" /> <span class="text-danger"></span>
                                </div>
                                <div class="form-group text-start text-dark mb-2">
                                    <label class="" for="username ">收件人姓名</label>
                                    <input type="text" class="form-control" name="name" id="username"
                                           placeholder="輸入姓名" v-model="modal.Name" /> <span class="text-danger"></span>
                                </div>
                                <div class="form-group text-start text-dark mb-2">
                                    <label class="" for="usertel">收件人電話</label>
                                    <input type="tel" class="form-control" id="usertel" v-model="modal.Tel"
                                           placeholder="請輸入電話" />
                                </div>
                                <div class="form-group text-start text-dark mb-2">
                                    <label class=""
                                           for="useraddress">收件人Line</label>
                                    <input type="text" class="form-control" name="line"
                                           id="userline" placeholder="請輸入LineID" v-model="modal.LineID" /> <span class="text-danger">Line欄位不得留空</span>
                                </div>
                                <div class="form-group text-start text-dark">
                                    <label for="memo">留言</label>
                                    <textarea name="" id="memo" class="form-control" cols="30" rows="5" v-model="modal.Memo"></textarea>
                                </div>

                            </form>
                        </div>
                    </div>
                </div>
                <div class="modal-footer ">
                    <button type="button" class="w-50 btn btn-dark" v-on:click="updateCart()">UpDate</button>
                    <button type="button" class="w-50 btn btn-danger" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

















@section topCSS{
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@500&display=swap" rel="stylesheet">
    <style>
        .modal {
            z-index: 3000;
        }

        .modal-backdrop {
            z-index: 2999;
        }

        body {
            font-family: 'Noto Sans TC', sans-serif;
        }

        h2 {
            margin: 30px 0 30px 40px;
            font-size: 26px;
        }

        .table thead th {
            border-bottom: 1px solid #f0eded !important;
        }

        .table th {
            border-top: none !important;
            color: #524545;
        }

        .table td {
            border-top: 1px solid #f0eded !important;
            display: table-cell;
            vertical-align: middle !important;
            border-bottom: 1px solid #f0eded !important;
            color: #000;
        }


        tr {
            color: rgb(170, 165, 165);
            text-align: center;
        }


        .product_count,
        .delete {
            margin-top: -13px;
        }

        .minuscount,
        .pluscount {
            background-color: transparent;
            width: 25px;
            height: 25px;
            border-radius: 50%;
            border: 1px solid rgb(165, 163, 163);
            font-size: 13px;
        }

            .minuscount:hover,
            .pluscount:hover {
                background-color: rgb(187, 186, 183);
            }

            .minuscount:focus,
            .pluscount:focus,
            .checkoutbtn:focus {
                outline: none;
            }

        .checkoutbtn:disabled {
            background-color: gray;
            color: rgb(170, 165, 165);
        }

        .count {
            margin: 0 10px 0 10px;
            font-size: 20px;
        }

        img {
            width: 150px;
            height: 150px;
        }

        .checkout p {
            font-size: 23px;
        }

        .checkoutbtn {
            display: block;
            width: 150px;
            background-color: black;
            color: white;
            border: none;
            border-radius: 10px;
            font-size: 16px;
            padding: 8px;
            margin-left: auto;
        }

        .most__search__tab ul {
            display: flex;
            justify-content: flex-end;
        }

        .nav-tabs {
            border-bottom: none !important;
        }

        /*----.talentCart---*/


        .talentCart p {
            color: #524545;
        }

        .talentCart span {
            color: black;
        }

        .talentCart {
            margin-bottom: 50px
        }

        .QTInfo {
            padding-top: 45px
        }

        .RefuseOrChoose {
            padding-bottom: 5px
        }

        .CartListindex {
            display: none;
        }
    </style>
}

@section endJS{

    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>
    <script>
        $('#myTab a').on('click', function (event) {
            event.preventDefault()
            $(this).tab('show')
        })
    </script>

    <script>
        let cart = new Vue({
            el: '#cart',
            data: {
                cartsProduct: {},
                get: false,
                modal: {},
                productchecked: [],

                getQT: false,
                qtsProduct: [],
                disabled:true
            },
            methods:
            {
                changeCountPlus() {
                    this.modal.Count++;
                },
                changeCountMinus() {
                    if (this.modal.Count !=1) {
                        this.modal.Count--;
                    }
                },
                clickModal(index) {
                    this.modal = this.cartsProduct[index]
                    $('#staticBackdrop').modal('show')

                },
                updateCart() {
                    let id =@ViewBag.MemberID
                        axios.put(`/api/Cart/UpDateCart?id=${id}`, this.modal).then(res => {
                            if (res.data.Result) {
                                this.getCart()
                                $('#staticBackdrop').modal('hide')
                                this.confirmTest();
                            }
                            else {
                                //TODO 加alert
                                alert("更新失敗:" + res.data.ErrMsg)
                            }
                        })
                },
                getCart() {
                    let id =@ViewBag.MemberID
                        axios.get(`/api/Cart/GetCart?id=${id}`).then(res => {
                                this.cartsProduct = res.data.Result.map(x => Object.assign(x, { selected: false }))
                                if (this.cartsProduct.length == 0 || this.cartsProduct == null) {
                                    this.get = false;
                                    
                                }
                                else {
                                    this.get = true
                                    console.log(this.cartsProduct,id)
                                }
                        })
                   
                },
                addcheckoutList(index) {
                    this.productchecked = [];
                    this.cartsProduct[index].selected = !this.cartsProduct[index].selected
                    this.productchecked = this.cartsProduct.filter(x => x.selected == true)
                    if (this.productchecked.length == 0) {
                        this.disabled = true
                    }
                    else {
                        this.disabled = false;
                    }
                    

                },
                addOrder() {
                    axios.post(`/api/Order/AddOrder`, this.productchecked).then(res => {
                        window.location.replace(`/Cart/GoToConfirmPayment/${res.data.Result}`);
                    });
                },
                orderSuccess() {
                    Swal.fire(
                        '訂單已成立!',
                        '請至會員中心查看，並點擊關閉',
                        'success'
                    ) },

                confirmTest() {
                    Swal.fire(
                        '更新成功!',
                        '點擊按鈕關閉',
                        'success'
                    )
                },
                confirmDelete(index) {
                    Swal.fire({
                        title: '確定要刪除此服務嗎?',
                        text: "您將無法還原此服務!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            let id =@ViewBag.MemberID
                            axios.delete(`/api/Cart/DelCart?id=${id}&CartID=${this.cartsProduct[index].CartID}`).then(res => {
                            if (res.data.Result == true) {
                            Swal.fire(
                            'Deleted!',
                            'Your file has been deleted.',
                            'success'
                            )
                            this.getCart()
                            }
                           })
                          }
                        })
                       },
                
                getQTCart() {
                    axios.get('/api/Cart/GetQuotationCart').then(res => {
                        this.qtsProduct = JSON.parse(res.data.Result);
                        console.log(this.qtsProduct);
                        if (this.qtsProduct.length == 0 || this.qtsProduct == null) {
                            this.getQT = false;
                        }
                        else {
                            this.getQT = true
                        }
                        console.log(this.getQT);
                        this.qtsProduct.forEach(q => console.log(q.NickName));
                    })
                },
                refuse(arg) {
                    console.log("in");
                    console.log(arg);
                    axios({ method: "post", url: "/api/Cart/RefuseQuotation", data: arg, headers: { 'Content-Type': 'application/json; charset=utf-8', 'strict':false } })
                        .then(res => {
                            window.location.reload();
                        })
                },
                complete(arg) {
                    axios({ method: "post", url: "/api/Cart/AddQuotationOrder", data: arg, headers: { 'Content-Type': 'application/json; charset=utf-8', 'strict': false } })
                        .then(res => {
                            console.log(res.data.Result);
                            window.location.replace(`/Cart/GoToConfirmPayment/${res.data.Result}`);
                        });

                }
            },
            computed: {
                cartTotal()
                {
                let temp = this.cartsProduct.map(x => x.Price * x.Count).reduce((a, b) => a + b)
                return temp.toLocaleString('zh-TW', { style: 'currency', currency: 'TWD', minimumFractionDigits: 0 })
                }
            },
            created: function () {
                this.getCart();
                this.getQTCart();
            }
        })

    </script>



}

